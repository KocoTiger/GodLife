<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OperatorRewardMapper">

	<!-- joinEvent --> 	
	<resultMap id="operatorJoinEventSelectMap" type="operatorJoinEvent">
		<result property="joinEventNo" 	column="join_event_no" 	jdbcType="INTEGER"/>
		<result property="userEmail"	column="user_email" 	jdbcType="VARCHAR" />
		<result property="rewardNo" 	column="reward_no" 		jdbcType="VARCHAR" />
		<result property="regDate" 		column="reg_date" 		jdbcType="DATE" />
	</resultMap>	
	<!-- reward --> 	
	<resultMap id="operatorRewardSelectMap" type="operatorReward">
		<result property="rewardNo" 	column="reward_no" 		jdbcType="INTEGER"/>
		<result property="eventNo"		column="event_no" 		jdbcType="INTEGER" />
		<result property="reward" 		column="reward" 		jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addOperatorReward"		parameterType="operatorReward" >
	 	INSERT
		INTO reward( reward_no , event_no , reward) 
		VALUES	 (	seq_reward_reward_no.NEXTVAL, #{eventNo} , #{reward} )
	 </insert>
	 
	 <!-- NOT 	USING -->	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getOperatorReward"	parameterType="int" resultMap="operatorRewardSelectMap">
		SELECT
		reward_no , event_no , reward
		FROM reward 
		WHERE reward_no = #{rewardNo}
	 </select>
	 <!-- SQL : DELETE -->
	 
	 <!-- SQL : UPDATE ROULL -->
	 <update	id="updateOperatorRoullReward"	parameterType="operatorReward" >
	   	UPDATE reward
	   	<set>
		   	<![CDATA[
			reward = (
	                  SELECT inv.reward
	                  FROM
	                  (
	                      WITH reward AS (
	                      SELECT 2 reward, 70 percent FROM dual UNION ALL
	                      SELECT 3 , 20  FROM dual UNION ALL
	                      SELECT 4 , 5  FROM dual UNION ALL
	                      SELECT 5 , 5  FROM dual
	                  )
	                      SELECT * FROM (
	                          SELECT * FROM reward r, ( SELECT level lv FROM dual CONNECT BY LEVEL <= 100) WHERE percent >= lv ORDER BY DBMS_RANDOM.VALUE) 
	                      WHERE ROWNUM <= 1
	                  )inv
	              )
	        ]]>
	   	</set>
		WHERE reward_no = #{rewardNo}
		    AND EXISTS (
		    SELECT r.reward_no, r.event_no, r.reward, j.reg_date
		    FROM reward r, join_event j
		    WHERE r.event_no = #{eventNo} 
		        AND r.reward_no = j.reward_no
			)
	 </update>
	 
	 <!-- SQL : UPDATE DAY -->
	 <update	id="updateOperatorDayReward"	parameterType="map" >
	   	UPDATE reward r
	   	<set>
	   	SET r.reward = #{reward}
	   	</set>
		WHERE EXISTS (
		        SELECT j.user_email
		        FROM join_event j
		        WHERE j.user_email = #{userEmail}
		    ) 
		    AND r.reward_no = #{rewardNo}
		    AND EXISTS (
		        SELECT coupon
		        FROM (    
		                SELECT COUNT(inv.user_email) coupon
		                FROM
		                (
		                    SELECT j.join_event_no , j.user_email , r.event_no , r.reward , j.reg_date 
		                    FROM join_event j, reward r
		                    WHERE j.reward_no = r.reward_no
		                        AND j.user_email = #{userEmail}
		                        AND r.event_no = '1'
		                    GROUP BY j.join_event_no, j.user_email, r.event_no, r.reward, j.reg_date
		                    ORDER BY j.join_event_no                    
		                )inv
		                WHERE inv.reg_date BETWEEN TO_DATE(TRUNC(SYSDATE,'MM')) AND TO_DATE(LAST_DAY(SYSDATE))
		                AND inv.event_no = '1'
		        ) c
		        WHERE c.coupon = 14 OR c.coupon = 28
		)	 
	</update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getOperatorRewardList"  parameterType="search"	resultMap="operatorRewardSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT prod_no , prod_name , prod_detail, price, reg_date
											FROM product
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				prod_name = #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getOperatorRewardTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no , prod_name , prod_detail
						FROM product
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		prod_name = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>
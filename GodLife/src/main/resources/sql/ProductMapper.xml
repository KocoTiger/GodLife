<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="productNo" 		column="product_no" 		jdbcType="NUMERIC"/>
		<result property="productName"		column="product_name" 		jdbcType="VARCHAR" />
		<result property="productPrice" 	column="product_Price" 		jdbcType="NUMERIC" />
		<result property="productDetail" 	column="product_detail" 	jdbcType="VARCHAR" />
		<result property="productImg" 		column="product_img" 		jdbcType="VARCHAR" />
		<result property="status" 			column="status" 			jdbcType="VARCHAR" />

	</resultMap>
	
	<!-- SQL : INSERT -->
<!-- //////////////////쿠폰 상품 등록 UI, 등록 이미지, 등록 완료, 확인 /////////////////////////////////////////////////// -->
	<insert 	id="addProductCoupon"		parameterType="product" >
	 	INSERT
		INTO products ( product_no , product_name , product_price, product_detail , product_img, status ) 
		VALUES  ( SEQ_PRODUCTS_PRODUCT_NO.NEXTVAL , #{productName:VARCHAR} , #{productPrice} , #{productDetail:VARCHAR} , #{productImg:VARCHAR} , #{status} )

	 </insert>

	<insert 	id="addProductVoucher"		parameterType="product" >
	 	INSERT
		INTO products ( product_no , product_name , product_price, product_detail , product_img, status ) 
		VALUES  ( SEQ_PRODUCTS_PRODUCT_NO.NEXTVAL , #{productName:VARCHAR} , #{productPrice} , #{productDetail:VARCHAR} , #{productImg:VARCHAR} , #{status} )

	 </insert>

	<insert 	id="addProductPoint"		parameterType="product" >
	 	INSERT
		INTO products ( product_no , product_name , product_price, product_detail , product_img, status ) 
		VALUES  ( SEQ_PRODUCTS_PRODUCT_NO.NEXTVAL , #{productName:VARCHAR} , #{productPrice} , #{productDetail:VARCHAR} , #{productImg:VARCHAR} , #{status} )

	 </insert>


<!-- /////////////////////////////쿠폰, 상품권, 포인트 상세 조회/////////////////////////////////////////////////// -->
	 
	 <select 	id="getProductCoupon"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		product_no , product_name , product_detail ,  product_price ,  product_img , status 		
		FROM products 
		WHERE product_no = #{value} and status = '1'
	 </select>

	 <select 	id="getProductVoucher"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		product_no , product_name , product_detail ,  product_price ,  product_img , status 		
		FROM products 
		WHERE product_no = #{value} and status = '2'
	 </select>

	 <select 	id="getProductPoint"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		product_no , product_name , product_detail ,  product_price ,  product_img , status 		
		FROM products 
		WHERE product_no = #{value} and status = '3'
	 </select>


<!-- /////////////////////////////쿠폰, 상품권, 포인트 이미지 수정, 정보 수정 완료, 수정 확인////////////////////////////////// -->
	 
	 <!-- SQL : UPDATE -->
<!-- /////////////////////////////상품 수정/////////////////////////////////////////////////// -->
	 <update	id="updateProductCoupon"	parameterType="product" >
	   	UPDATE products
	   	<set>
	   		product_name 			= #{productName:VARCHAR} ,
			product_detail			= #{productDetail:VARCHAR},
			product_price			= #{productPrice},
			product_img				= #{productImg:VARCHAR},
			status					= #{status:VARCHAR}
	   	</set>
	   	WHERE product_no = #{productNo} and status = '1'
	 </update>
	 
	 <update	id="updateProductVoucher"	parameterType="product" >
	   	UPDATE products
	   	<set>
	   		product_name 			= #{productName:VARCHAR} ,
			product_detail			= #{productDetail:VARCHAR},
			product_price			= #{productPrice},
			product_img				= #{productImg:VARCHAR},
			status					= #{status:VARCHAR}
	   	</set>
	   	WHERE product_no = #{productNo} and status = '2'
	 </update>

	 <update	id="updateProductPoint"	parameterType="product" >
	   	UPDATE products
	   	<set>
	   		product_name 			= #{productName:VARCHAR} ,
			product_detail			= #{productDetail:VARCHAR},
			product_price			= #{productPrice},
			product_img				= #{productImg:VARCHAR},
			status					= #{status:VARCHAR}
	   	</set>
	   	WHERE product_no = #{productNo} and status = '3'
	 </update>
<!-- //////////////////////////쿠폰, 상품권, 포인트 상품 삭제//////////////////////////////////////////////////////  -->






<!-- //////////////////////////쿠폰, 상품권, 포인트 상품 삭제//////////////////////////////////////////////////////  -->

	 <delete	id="deleteProductCoupon"	parameterType="product" >
	   	DELETE from products
	   	WHERE product_no = #{productNo} and status = '1'
	 </delete>

	 <delete	id="deleteProductVoucher"	parameterType="product" >
	   	DELETE from products
	   	WHERE product_no = #{productNo} and status = '2'
	 </delete>
	 
	 <delete	id="deleteProductPoint"	parameterType="product" >
	   	DELETE from products
	   	WHERE product_no = #{productNo} and status = '3'
	 </delete>

<!-- //////////////////////////쿠폰, 상품권, 포인트 전체 목록 조회//////////////////////////////////////////////////////  -->
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductCouponList"  parameterType="map"	 resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT product_no, product_name , product_price , product_detail , product_img
											FROM products
											
												<where>
												status= '1'
												<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				product_no LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				product_name LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				product_price LIKE '%${searchKeyword}%'
													</if>
												
											</if>
											</where>
											ORDER BY product_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>

	<select  id="getProductVoucherList"  parameterType="map"	 resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT product_no, product_name , product_price , product_detail , product_img
											FROM products
											
												<where>
												status= '2'
												<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				product_no LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				product_name LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				product_price LIKE '%${searchKeyword}%'
													</if>
												
											</if>
											</where>
											ORDER BY product_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>

	<select  id="getProductPointList"  parameterType="map"	 resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT product_no, product_name , product_price , product_detail , product_img 
											FROM products
											
												<where>
												status= '3'
												<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				product_no LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				product_name LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				product_price LIKE '%${searchKeyword}%'
													</if>
												
											</if>
											</where>
											ORDER BY product_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>



	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT product_no, product_name , product_price
						FROM products
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
									product_no LIKE '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
									product_name LIKE '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
									product_price LIKE '%${searchKeyword}%'
								</if>							
							</where>
						</if> ) countTable						
	 </select>


</mapper>
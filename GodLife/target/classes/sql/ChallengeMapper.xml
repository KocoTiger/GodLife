<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ChallengeMapper">
 	<resultMap id="ChallengeSelectMap" type="challenge">
		<result property="challengeNo"				column="challenge_no"		jdbcType="NUMERIC" />
		<result property="hostEmail"				column="host_email"			jdbcType="VARCHAR" />
		<result property="challengeTitle"			column="title"				jdbcType="VARCHAR" />
		<result property="challengeThumbnailImg"	column="thumbnail_img"		jdbcType="VARCHAR" />
		<result property="challengeDetail"			column="detail"				jdbcType="VARCHAR" />
		<result property="challengeRule"			column="rule"				jdbcType="VARCHAR" />
		<result property="challengeCateNo"			column="categ_no"			jdbcType="NUMERIC" />
		<result property="startDate"				column="start_date"			jdbcType="VARCHAR" />
		<result property="endDate"					column="end_date"			jdbcType="VARCHAR" />
		<result property="openRange"				column="open_range"			jdbcType="VARCHAR" />
		<result property="joinPoint"				column="join_point"			jdbcType="NUMERIC" />
		<result property="challengeRegDate"			column="reg_date"			jdbcType="DATE" />
		<result property="challengeStatus"			column="status"				jdbcType="VARCHAR" />
		<result property="joinCount"				column="join_count"			jdbcType="NUMERIC" />
		<result property="totalCertiCount"			column="total_certi_count"	jdbcType="NUMERIC" />
	</resultMap>
 	
 	
 	<!--/////////////////////// Challenges ////////////////////// -->
 	
 	
	
	<!-- ////////// insert //////////// -->
	
	 <insert id="insertChallenge" parameterType="challenge">
	 	
	 	
	 	<selectKey keyProperty="challengeNo" resultType="int" order="BEFORE">  
        	SELECT seq_challenges_challenge_no.nextval FROM dual
     	</selectKey>
	 	
	 	INSERT INTO CHALLENGES
	 				(challenge_no
	 				,host_email
	 				,title
	 				,thumbnail_img
	 				,detail
	 				,rule
	 				,categ_no
	 				,start_date
	 				,end_date
	 				,open_range
	 				,join_point
	 				,status
	 				,reg_date
	 				,TOTAL_CERTI_COUNT
	 				,JOIN_COUNT	)
					VALUES
					(#{challengeNo}
					,#{hostEmail}
					,#{challengeTitle}
					,#{challengeThumbnailImg}
					,#{challengeDetail}
					,#{challengeRule}
					,#{challengeCateNo}
					,#{startDate}
					,#{endDate}
					,#{openRange}
					,#{joinPoint}
					,#{challengeStatus}
					,SYSDATE
					,#{totalCertiCount}
					,#{joinCount}
					)
	 </insert> 
	 
	 <!-- ////////// insert //////////// -->
	 
	 
	 
	 
	 
	 <!-- ////////// select //////////// -->
	 <select id="getChallengeListLogin" parameterType="java.util.Map" resultMap="ChallengeSelectMap" >
				SELECT
				challenge.*
				FROM
				(
				SELECT
				ROWNUM no, search.*
				FROM
					(
						SELECT
						list.*
						FROM
						(
						SELECT
						inv.CHALLENGE_NO,
						inv.HOST_EMAIL,
						inv.TITLE,
						inv.THUMBNAIL_IMG,
						inv.DETAIL,
						inv.RULE,
						inv.CATEG_NO,
						inv.START_DATE,
						inv.END_DATE,
						inv.OPEN_RANGE,
						inv.JOIN_POINT,
						inv.STATUS,
						inv.REG_DATE,
						inv.TOTAL_CERTI_COUNT,
						inv.JOIN_COUNT
						FROM
							(
								SELECT
								NVL(fb.user_email,'0') user_email,
								NVL(fb.target_email,'0') target_email,
								NVL(fb.f_b_status,'0')f_b_status,
								NVL(fb.acc_status,'0')acc_status,
							        c.*
								FROM
								friend_blacks fb, challenges c
								WHERE fb.target_email(+) = c.host_email
						)inv
						WHERE NOT inv.user_email = #{user.userEmail}
						AND NOT inv.target_email = #{user.userEmail}
						AND NOT inv.acc_status = '2'
						AND inv.status = '0'
						AND inv.open_range = '0'
						UNION
						SELECT
						*
						FROM
						challenges
						WHERE host_email = #{user.userEmail}
						AND status = '0'
						UNION
						SELECT
						        c.*
						FROM
						(
							SELECT
							inv.*
							FROM
								(
									SELECT
									*
									FROM
									friend_blacks
									WHERE user_email = #{user.userEmail}
									OR target_email = #{user.userEmail}
								)inv
							WHERE acc_status = '2'
						)outv, challenges c
						WHERE outv.target_email(+) = c.host_email
						AND acc_status = '2'
						AND NOT c.host_email = #{user.userEmail}
						UNION
						SELECT
						        c.*
						FROM
						(
							SELECT
							inv.*
							FROM
								(
									SELECT
									*
									FROM
									friend_blacks
									WHERE user_email = #{user.userEmail}
									OR target_email = #{user.userEmail}
								)inv
							WHERE acc_status = '2'
						)outv, challenges c
						WHERE outv.user_email(+) = c.host_email
						AND acc_status = '2'
						AND NOT c.host_email = #{user.userEmail}
						)list
						<where>
							<if test="search.searchKeyword != null and search.searchKeyword != ''">
							  	list.title LIKE '%'||#{search.searchKeyword}||'%'
							</if>
							<if test="search.orderCondition != 0">
								AND list.categ_no = #{search.orderCondition}
							</if>
						</where>
						<if test="search.searchCondition != null">
							<if test="search.searchCondition == 1">
								ORDER BY list.reg_date DESC
							</if>
							<if test="search.searchCondition == 2">
								ORDER BY list.join_count DESC
							</if>
						</if>
						<if test="search.searchCondition == null">
							ORDER BY list.challenge_no
						</if>
					)search
					WHERE ROWNUM &lt;= #{search.endRowNum}
				)challenge
				WHERE challenge.no BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	 </select>
	 
	 <select id="getChallengeListLoginTotal" parameterType="java.util.Map"  resultType="int">
	 		
	 			SELECT
				COUNT(*)
				FROM
				(
				SELECT
				inv.CHALLENGE_NO,
				inv.HOST_EMAIL,
				inv.TITLE,
				inv.THUMBNAIL_IMG,
				inv.DETAIL,
				inv.RULE,
				inv.CATEG_NO,
				inv.START_DATE,
				inv.END_DATE,
				inv.OPEN_RANGE,
				inv.JOIN_POINT,
				inv.STATUS,
				inv.REG_DATE,
				inv.TOTAL_CERTI_COUNT,
				inv.JOIN_COUNT
				FROM
					(
						SELECT
						NVL(fb.user_email,'0') user_email,
						NVL(fb.target_email,'0') target_email,
						NVL(fb.f_b_status,'0')f_b_status,
						NVL(fb.acc_status,'0')acc_status,
					        c.*
						FROM
						friend_blacks fb, challenges c
						WHERE fb.target_email(+) = c.host_email
				)inv
				WHERE NOT inv.user_email = #{user.userEmail}
				AND NOT inv.target_email = #{user.userEmail}
				AND NOT inv.acc_status = '2'
				AND inv.status = '0'
				AND inv.open_range = '0'
				UNION
				SELECT
				*
				FROM
				challenges
				WHERE host_email = #{user.userEmail}
				AND status = '0'
				UNION
				SELECT
				        c.*
				FROM
				(
					SELECT
					inv.*
					FROM
						(
							SELECT
							*
							FROM
							friend_blacks
							WHERE user_email = #{user.userEmail}
							OR target_email = #{user.userEmail}
						)inv
					WHERE acc_status = '2'
				)outv, challenges c
				WHERE outv.target_email(+) = c.host_email
				AND acc_status = '2'
				AND NOT c.host_email = #{user.userEmail}
				UNION
				SELECT
				        c.*
				FROM
				(
					SELECT
					inv.*
					FROM
						(
							SELECT
							*
							FROM
							friend_blacks
							WHERE user_email = #{user.userEmail}
							OR target_email = #{user.userEmail}
						)inv
					WHERE acc_status = '2'
				)outv, challenges c
				WHERE outv.user_email(+) = c.host_email
				AND acc_status = '2'
				AND NOT c.host_email = #{user.userEmail}
				)list
				ORDER BY list.challenge_no
	 		
	 </select>
	 
	 
	 <select id="getChallengeList" parameterType="java.util.Map" resultMap="ChallengeSelectMap">
	 
	 		SELECT
			c.*
			FROM
			<if test="challengeListOpt == 'total' or challengeListOpt == 'add'">
				challenges c
				<where>
					<if test="challengeListOpt == 'total'">
						status = '0'
						AND open_range = '0'
					</if>
					<if test="challengeListOpt == 'add'">
						AND c.host_email = #{user.userEmail}
					</if>
					<if test="search.searchKeyword != null and search.searchKeyword != ''">
					  	AND c.title LIKE '%'||#{search.searchKeyword}||'%'
					</if>
					<if test="search.orderCondition != 0">
						AND c.categ_no = #{search.orderCondition}
					</if>
				</where>
			</if>
			<if test="challengeListOpt == 'pick' or challengeListOpt == 'join'">
				challenges c, join_challenger jc
				<where>
					c.challenge_no = jc.challenge_no
					AND jc.user_email = #{user.userEmail}
					<if test="challengeListOpt == 'join'">
						AND jc.status = '0'
					</if>
					<if test="challengeListOpt == 'pick'">
						AND jc.status = '1'
					</if>
					<if test="search.searchKeyword != null and search.searchKeyword != ''">
					  	AND c.title LIKE '%'||#{search.searchKeyword}||'%'
					</if>
					<if test="search.orderCondition != 0">
						AND c.categ_no = #{search.orderCondition}
					</if>
				</where>
			</if>
			<if test="search.searchCondition != null">
				<if test="search.searchCondition == 1">
					ORDER BY c.reg_date DESC
				</if>
				<if test="search.searchCondition == 2">
					ORDER BY c.join_count DESC
				</if>
			</if>
			<if test="search.searchCondition == null">
				ORDER BY c.challenge_no
			</if>
	 		
	 		
	 </select>
	 
	 
	 
	 
	 <select id="getChallenge" parameterType="java.util.Map" resultMap="ChallengeSelectMap">
	 
		 	SELECT
			*
			FROM
			challenges
			WHERE challenge_no = #{challengeNo}
				 
	 </select>
	 
	 
	 
	 
	 
	 
	 <!-- ////////// select //////////// -->
	 
	 
	 <!--/////////////////////// Challenges ////////////////////// -->
	 
	 
	 
	 
	 
	 <!--/////////////////////// CertiCycle ////////////////////// -->
	 
	 
	 <!-- ////////// insert //////////// -->
	 
	 <insert id="insertCertiDay" parameterType="java.util.Map" >
			INSERT into CERTI_CYCLE(CERTI_CYCLE_NO,CERTI_DAY,CHALLENGE_NO,STATUS)
			    SELECT seq_certi_cycle_certi_cycle_no.NEXTVAL, A.* FROM(
    		<foreach item="item" collection="certiCycle" separator="UNION ALL " >
		        select #{item} as CERT_DAY,
		        #{challengeNo} as CHALLENGE_NO,
		        '0' as STATUS
		        from dual
    		</foreach>) A
	</insert>

	 
	 
	 <insert id="insertCertiDate" parameterType="java.util.Map" >
		    INSERT into CERTI_CYCLE(CERTI_CYCLE_NO,CERTI_DATE,CHALLENGE_NO,STATUS)
			    SELECT seq_certi_cycle_certi_cycle_no.NEXTVAL, A.* FROM(
    		<foreach item="item" collection="certiDate" separator="UNION ALL " >
		        select #{item} as CERT_DATE,
		        #{challengeNo} as CHALLENGE_NO,
		        '1' as STATUS 
		        from dual
    		</foreach>) A
	</insert>
	
	<!-- ////////// insert //////////// -->
	
	
	
	
	
	<!-- ////////// select //////////// -->
	<select id="getCertiDay" parameterType="java.util.Map" resultType="string">
		SELECT
		certi_day
		FROM
		certi_cycle
		WHERE challenge_no = #{challengeNo}
		AND status = '0'
	</select>
	
	
	<select id="getCertiDate" parameterType="java.util.Map" resultType="string">
		SELECT
		certi_date
		FROM
		certi_cycle
		WHERE challenge_no = #{challengeNo}
		AND status = '1'
        ORDER BY certi_date
	</select>
	
	<!-- ////////// select //////////// -->
	
	
	
	
	
	
	
	
	<!--/////////////////////// CertiCycle ////////////////////// -->
	 	
	 	
	 	
	 	
 	<!--/////////////////////// JoinChallenger ////////////////////// -->
 	
 	
 	<!-- ////////// insert //////////// -->
 	<insert id="insertJoinChallenger" parameterType="challenge">
 		INSERT INTO join_challenger
 					(
 					join_challenger_no
 					,user_email
 					,challenge_no
 					,certi_count
 					,challenge_percent
 					,challenge_reward_point
 					,challenge_reward_flag
 					,status
 					)
				VALUES(
					seq_join_challenger_no.nextval
					,#{hostEmail}
					,#{challengeNo}
					,0
					,0.0
					,0
					,0
					,0
					)
 	</insert>
 	<!-- ////////// insert //////////// -->
 	
 	
 	<!-- ////////// select //////////// -->
 	<select id="getJoiner" parameterType="java.util.Map" resultType="int">
 		SELECT
		COUNT(*)
		FROM
		join_challenger
		WHERE user_email = #{user.userEmail}
		AND challenge_no = #{challengeNo}
 	</select>
 	<!-- ////////// select //////////// -->
 	
 	<!--/////////////////////// JoinChallenger ////////////////////// -->
	 	
	 	
	 
	 
</mapper>
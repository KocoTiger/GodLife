<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MyBadgeMapper">
 	
 	
	<resultMap id="myBadgeSelectMap" type="myBadge">
		<result property="myBadgeNo" 		column="my_badge_no" 	jdbcType="NUMERIC" />
		<result property="userEmail"		column="user_email" 	jdbcType="VARCHAR" />
		<result property="badgeNo" 			column="badge_no" 		jdbcType="NUMERIC"/>
		<result property="actCount" 		column="act_count" 		jdbcType="NUMERIC" />
      <association property="badge" javaType="com.godLife.io.service.domain.Badge">
         <result property="badgeNo"         column="badge_no"       jdbcType="NUMERIC" />
         <result property="badgeName"       column="badge_name"     jdbcType="VARCHAR" />
         <result property="badgeImg"        column="badge_img"      jdbcType="VARCHAR" />
         <result property="badgeDetail"     column="badge_detail"   jdbcType="VARCHAR" />
      </association>

	</resultMap>
	

<!-- /////////////////////////////내 배지 상세 내용 조회/////////////////////////////////////////////////// -->
	 
	 <select 	id="getBadgeMy"	parameterType="int"	resultMap="myBadgeSelectMap">
		SELECT
		my_badge_no , user_email , badge_no , act_count  
		FROM my_badge 
		WHERE my_badge_no = #{value}
	 </select>



<!-- /////////////////////////////내 배지 상세 내용 조회/////////////////////////////////////////////////// -->

	<update id="updateBadgeMyActCount" parameterType="myBadge">
	
		MERGE INTO MY_BADGE  
			USING DUAL 
			ON ( user_email = #{userEmail:VARCHAR} and badge_no= #{badgeNo} )
		WHEN MATCHED THEN 
 			UPDATE SET act_count = act_count + 1
		WHEN NOT MATCHED THEN 
			<choose> 
				<when test="badgeNo == 10000">
			INSERT (my_badge_no, user_email , badge_no , act_count ) 
			VALUES	(seq_my_badge_my_badge_no.nextval , #{userEmail:VARCHAR}, #{badgeNo} , 31)
				</when>
				
				<otherwise>
			INSERT (my_badge_no, user_email , badge_no , act_count ) 
			VALUES	(seq_my_badge_my_badge_no.nextval , #{userEmail:VARCHAR}, #{badgeNo} ,1)
				</otherwise>
			</choose>
	</update>


<!-- //////////////////////////배지 전체 목록 조회//////////////////////////////////////////////////////  -->
		 
	<!-- SQL : SELECT LIST -->
<!-- 원본 
	<select  id="getBadgeList"  parameterType="search"	resultMap="myBadgeSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT my_badge_no, user_email , badge_no, act_count  
											FROM my_badge 
											ORDER BY my_badge_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
-->
	<select  id="getBadgeMyABList"  parameterType="map"	resultMap="myBadgeSelectMap">
	  	SELECT a.my_badge_no, a.user_email, a.badge_no, a.act_count, b.badge_name, b.badge_img, b.badge_detail, b.status 
										FROM my_badge a 
										    INNER JOIN badges b 
										    ON a.badge_no = b.badge_no 
										<where>
											user_email = #{userEmail}
											and status = '0'
										<if test="searchCondition != null">
											a.badge_no = 10004	
										</if>
										</where>
										ORDER BY a.my_badge_no 
	 </select>

	<select  id="getBadgeMyIBList"  parameterType="map"	resultMap="myBadgeSelectMap">
	  	SELECT a.my_badge_no, a.user_email, a.badge_no, a.act_count, b.badge_name, b.badge_img, b.badge_detail, b.status 
										FROM my_badge a
										    INNER JOIN badges b
										    ON a.badge_no = b.badge_no
											WHERE a.user_email = #{userEmail}
											and status = '1' 
											
												<if test="searchCondition == 1">
													a.badge_no = 10005
												</if>
												<if test="searchCondition == 2">
													a.badge_no = 10006
												</if>			
												<if test="searchCondition == 3">
													a.badge_no = 10007
												</if>			
												<if test="searchCondition == 4">
													a.badge_no = 10008
												</if>			
												<if test="searchCondition == 5">
													a.badge_no = 10009
												</if>			
								
										ORDER BY a.my_badge_no 
	 </select>
	
	 
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 
</mapper>
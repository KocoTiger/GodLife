<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
    
    
   <resultMap id="userSelectMap" type="user">
      <result property="userEmail"          column="user_email"          jdbcType="VARCHAR"/>
      <result property="pwd"               column="pwd"                   jdbcType="VARCHAR" />
      <result property="role"                column="role"                   jdbcType="CHAR" />
      <result property="nick"                column="nick"                   jdbcType="VARCHAR" />
      <result property="regDate"             column="reg_date"             jdbcType="DATE" />
      <result property="categNo"             column="categ_no"             jdbcType="INTEGER" />
      <result property="profileImg"          column="profile_img"          jdbcType="VARCHAR" />
      <result property="intro"                column="intro"                   jdbcType="VARCHAR"  />
      <result property="phone"             column="phone"                jdbcType="VARCHAR" />
      <result property="redCardCount"    column="redcard_count"       jdbcType="INTEGER"  />
      <result property="accountStatus"    column="account_status"    jdbcType="CHAR" />
      <result property="reportCount"       column="report_count"       jdbcType="INTEGER" />
      <result property="totalPoint"          column="total_point"          jdbcType="INTEGER" />
      <result property="joinPath"          column="join_path"          jdbcType="VARCHAR" />
      <!-- 아래추가-->
      <result property="categName"       column="categ_name"          jdbcType="VARCHAR" />
      <result property="redCouponCount"       column="red_coupon_count"          jdbcType="INTEGER" />
      <result property="certiCouponCount"       column="certi_coupon_count"          jdbcType="INTEGER" />
      <!-- 아래추가-->
      <result property="challengeTitle"         column="title"            jdbcType="VARCHAR" />
      <result property="certiImg"               column="certi_img"         jdbcType="VARCHAR" />
      <result property="badgeName"      column="badge_name"    jdbcType="VARCHAR" />
      <result property="badgeImg"       column="badge_img"       jdbcType="VARCHAR" />
      
      <result property="rc"       column="rc"       jdbcType="INTEGER" />
      
   </resultMap>
   
      <!-- SQL : 타유저 상세조회, 로그인 -->
    <select    id="getUserKakao"   parameterType="int"   resultMap="userSelectMap">
      SELECT count(*)
      FROM users
      WHERE  user_email = #{userEmail}
      AND pwd =#{pwd}
    </select>
   
   
   <!-- SQL : 회원가입-->
   <insert    id="addUser"      parameterType="user" >
       INSERT
      INTO users (user_email, pwd, role, nick, reg_date, categ_no, phone, account_status, join_path)
      VALUES    (   #{userEmail : VARCHAR}, #{pwd : VARCHAR}, '1', #{nick : VARCHAR}, SYSDATE, #{categNo : INTEGER},
                         #{phone : VARCHAR}, '1', #{joinPath : VARCHAR})
    </insert>
    
    <!-- SQL : 계정상태 변경(레드카드 3장이상, 관리자)-->
    <update   id="updateAccStatus"   parameterType="user" >
         UPDATE users
         <set>
            account_status = =#{accountStatus} 
         </set>
         WHERE user_email = #{userEmail}
    </update>
    
    <!-- SQL : 본인정보, 타유저 상세조회, 로그인 -->
    <select    id="getUser"   parameterType="string"   resultMap="userSelectMap">
		SELECT u.*,c.categ_name
		From users u,categs c
		WHERE u.user_email = #{userEmail}
		AND u.categ_no = c.categ_no
    </select>
    
   <!-- SQL : 타유저 상세조회, 로그인 -->
    <select    id="getUserTarget"   parameterType="string"   resultMap="userSelectMap">
      SELECT *
      FROM users
      WHERE u.user_email = #{userEmail}
    </select>
    
    <!-- SQL : 비밀번호 변경 -->
    <update   id="updatePwd"   parameterType="user" >
         UPDATE users
         <set>
            pwd = #{pwd}
         </set>
         WHERE user_email = #{userEmail}
    </update>
    
    
    <!-- SQL : 본인정보 수정 -->
    <update   id="updateUser"   parameterType="user" >
         UPDATE users 
         <set>
            nick  = #{nick},
            phone = #{phone},
            categ_no = #{categNo},
            intro =  #{intro},
            profile_img = #{profileImg}
         </set>
         WHERE user_email = #{userEmail}
    </update>
    
    
    
    <!-- SQL : 유저전체 목록조회(관리자) -->
   <select  id="getUserList"  parameterType="search"   resultMap="userSelectMap">
        SELECT 
        *
        FROM (   
                    SELECT 
                    inner_table.* , ROWNUM AS row_seq
                    FROM      (   SELECT 
                                       u.user_email, u.nick, u.reg_date, c.categ_name
                                       FROM users u, categs c
                                     <if test="searchCondition != null">
                                    <where>
                                    u.categ_no = c.categ_no
                                       <if test="searchCondition == 0 and searchKeyword !='' ">
                                           AND u.user_email = #{searchKeyword}
                                       </if>
                                       <if test="searchCondition == 1 and searchKeyword !='' ">
                                           AND u.nick = #{searchKeyword}
                                       </if>
                                        <if test="searchCondition == 2 and searchKeyword !='' ">
                                           AND c.categ_name = #{searchKeyword}
                                       </if>
                                    </where>
                                    </if>
                                 ORDER BY u.reg_date DESC ) inner_table
                  WHERE ROWNUM &lt;= #{endRowNum} )
      WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
    </select>
   
    
    <select id ="findUserEmail" parameterType="String"  resultType="String">  
	SELECT user_email 
	FROM users
	WHERE phone = #{phone}
	</select>
 
 
   <select id ="findUserPwd" parameterType="map"  resultType="int">  
	SELECT COUNT(*)
	FROM users
	WHERE  phone = #{phone}  
	AND user_email = #{userEmail}
	</select>
	
    
    
    <!-- userEmail 중복체크 -->
	 <select id="checkUserEmail"  parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM users
		WHERE user_email= #{userEmail}
	</select>
	
	<!-- nick 중복체크 -->
	 <select id="checkNick" resultType="integer">
		SELECT COUNT(*)
		FROM users
		WHERE nick= #{nick}
	</select>
	
	<!-- 핸드폰 중복체크 -->
	 <select id="checkPhone" resultType="integer">
		SELECT COUNT(*)
		FROM users
		WHERE phone= #{phone}
	</select>
	
    
     <!-- SQL : 레드카드 발급, 제거 -->
    <update   id="updateRedCard"   parameterType="user" >
         UPDATE users u
 		 SET
         redCard_count = #{redCardCount}
         <where>
            user_email=#{userEmail}
         </where>
   </update>
    
    
<!-- 레드카드 쿠폰 사용 -->
    <update id="updateUserRedCoupon" parameterType="user" >
       UPDATE users
       SET 
       red_coupon_count = #{redCouponCount}
          <where>
           user_email=#{userEmail} 
         </where>
     </update>
     

     <update id="updateUserCertiCoupon" parameterType="user" >
       UPDATE users
       SET certi_coupon_count = #{certiCouponCount}
          <where>
            user_email=#{userEmail} 
         </where>
     </update>
     
     

     <update id="updateUserTotalPoint" parameterType="user" >
       UPDATE USERS
       SET total_point = #{totalPoint}
          <where>
             user_email=#{userEmail}
         </where>
     </update>
     
     
     <!-- SQL : 신고유저 목록조회(관리자)-->
	 <select  id="getUserReportList"  parameterType="map"	resultMap="userSelectMap">
	  	SELECT 
	  	*
	  	FROM (	
	  					SELECT 
	  					inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT *
											FROM users

											<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				WHERE user_email = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				WHERE nick = #{searchKeyword}
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				WHERE report_count = #{searchKeyword}
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				WHERE redcard_count = #{searchKeyword}
													</if>
											</if>
											) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
     
   
   <!-- SQL :유저전체 목록조회 카운트 -->
    <select  id="getTotalCount"  parameterType="search"    resultType="int">
        SELECT COUNT(*)
        FROM(   SELECT user_email , nick 
                  FROM users
                  <if test="searchCondition != null">
                     <where>
                        <if test="searchCondition == 0 and searchKeyword !='' ">
                            user_email = #{searchKeyword}
                        </if>
                        <if test="searchCondition == 1 and searchKeyword !='' ">
                         nick = #{searchKeyword}
                        </if>
                     </where>
                  </if> ) countTable                  
    </select>
    
    
    <!-- SQL : 신고 유저 목록조회 카운트 -->
    <select  id="getUserReportListTotalCount"  parameterType="search"    resultType="int">
        SELECT COUNT(*)
        FROM(  	SELECT *
											FROM users

											<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				WHERE user_email = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				WHERE nick = #{searchKeyword}
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				WHERE report_count = #{searchKeyword}
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				WHERE redcard_count = #{searchKeyword}
													</if>
											</if>
											 ) countTable                  
    </select>
    
    <!-- 신고 카운트 증가 -->
    <update id="updateUserReportCount" parameterType="user" >
       UPDATE users
       SET 
       REPORT_COUNT = #{reportCount}
          <where>
           user_email=#{userEmail} 
         </where>
     </update>
    
</mapper>